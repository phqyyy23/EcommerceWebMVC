@model IEnumerable<EcommerceWebMVC.ViewModels.ProductVM>
@{
    ViewData["Title"] = "Product";
    Layout = "_ListProduct";
}


<!-- Single Page Header start -->
@section BreadCrum{
<div class="container-fluid page-header py-5">
    <h1 class="text-center text-white display-6">Shop</h1>
    <ol class="breadcrumb justify-content-center mb-0">
        <li class="breadcrumb-item"><a href="#">Home</a></li>
        <li class="breadcrumb-item"><a href="#">Pages</a></li>
        <li class="breadcrumb-item active text-white">Shop</li>
    </ol>
</div>
}
<!-- Single Page Header End -->
<!-- Fruits Shop Start-->
@await Html.PartialAsync("ProductItem",Model)


<div class="col-12">
    <div class="pagination d-flex justify-content-center mt-5">
        @if (ViewBag.CurrentPage > 1)
        {
            <a href="@Url.Action("Index", new { page = ViewBag.CurrentPage - 1, loai = ViewContext.HttpContext.Request.Query["loai"] })" class="rounded">&laquo;</a>
        }

        @for (int i = 1; i <= ViewBag.TotalPages; i++)
        {
            if (i == ViewBag.CurrentPage)
            {
                <a href="#" class="active rounded">@i</a>
            }
            else
            {
                <a href="@Url.Action("Index", new { page = i, loai = ViewContext.HttpContext.Request.Query["loai"] })" class="rounded">@i</a>
            }
        }

    </div>
</div>
<!-- Fruits Shop End-->
